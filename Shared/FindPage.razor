@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using System.Globalization
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Services
@using Umbraco.Cms.Web.Common
@using nackademin24_umbraco.Business.Services.Interfaces
@using nackademin24_umbraco.Models.Blazor

@inject IFindService _findService
@inject UmbracoHelper _umbracoHelper
@inject ILocalizedTextService _localizedTextService

@code
{
    [Parameter]
    public string CultureName { get; set; }
    
    private CultureInfo CultureInfo { get; set; }
    private FindModel FindModel = new FindModel();
    private bool IsSearching = false;
    private List<Hit> Pages = new List<Hit>();
    private bool HasSearched = false;

    protected override async Task OnInitializedAsync()
    {
        CultureInfo = new CultureInfo(CultureName);
    }

    private async Task FindContentAsync()
    {
        if (string.IsNullOrWhiteSpace(FindModel.Query))
        {
            return;
        }
        else
        {
            Pages?.Clear();
            IsSearching = true;
            HasSearched = false;

            try
            {
                await Task.Delay(750);
                Pages = _findService.FindContent(FindModel.Query, CultureInfo);
            }
            finally
            {
                IsSearching = false;
                HasSearched = true;
            }
        }
    }
}

<div class="container">
    <!-- Search Form -->
    <div class="row mt-5">
        <div class="col-md-12">
            <EditForm Model="@FindModel" OnValidSubmit="FindContentAsync">
                <div class="input-group search-box">
                    <InputText id="searchInput" class="form-control search-input" name="query" type="search" 
                        placeholder="@_umbracoHelper.GetDictionaryValue("SearchForContent", CultureInfo)" 
                        aria-label="Search" @bind-Value="FindModel.Query" disabled="@IsSearching" />
                    <button type="submit" class="input-group-text search-button" id="submitButton" disabled="@IsSearching">
                        @if (IsSearching)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        }
                        else
                        {
                            <i class="fas fa-search"></i>
                        }
                    </button>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Search Results -->
    <div class="row mt-4">
        <div class="col-md-12">
            @if (Pages != null && Pages.Any())
            {
                <h3>@_umbracoHelper.GetDictionaryValue("SearchResultFor", CultureInfo) "@FindModel.Query":</h3>
                <div class="list-group">
                    @foreach (var item in Pages)
                    {
                        <div class="list-group-item mb-3 border rounded">
                            <h5 class="mb-1">
                                <a href="@item.Url" class="text-decoration-none text-primary">@item.Name</a>
                            </h5>
                            <small class="text-muted">@_umbracoHelper.GetDictionaryValue("Updated", CultureInfo): @item.UpdateDate</small>
                        </div>
                    }
                </div>
            }
            else if (HasSearched && !IsSearching && !string.IsNullOrWhiteSpace(FindModel.Query))
            {
                <div class="alert alert-warning mt-3" role="alert">
                    @_umbracoHelper.GetDictionaryValue("NoResultsFound", CultureInfo) "@FindModel.Query"
                </div>
            }
        </div>
    </div>
</div>